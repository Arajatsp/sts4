name: Test Akamai Upload

on:
  workflow_dispatch:

jobs:

  akamai-upload:
    name: Upload to Akamai
    runs-on: ubuntu-latest
    outputs:
      key_id: ${{ steps.gen-upload.outputs.key_id }}
      key_secret: ${{ steps.gen-upload.outputs.key_secret }}
      session_token: ${{ steps.gen-upload.outputs.session_token }}
    steps:
      - name: Gen file and upload
        id: gen-upload
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TOOLS_CLOUDGATE_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TOOLS_CLOUDGATE_SECRET_KEY  }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
          $(aws sts assume-role \
          --role-arn arn:aws:iam::${{ secrets.TOOLS_CLOUDGATE_ACCOUNT_ID }}:role/${{ secrets.TOOLS_CLOUDGATE_USER }} \
          --role-session-name gha-upload \
          --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" \
          --output text))
          echo "key_id=$AWS_ACCESS_KEY_ID" >> $GITHUB_OUTPUT
          echo "key_secret=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_OUTPUT
          echo "session_token=$AWS_SESSION_TOKEN" >> $GITHUB_OUTPUT

  akamai-test:
    name: Test Akamai
    runs-on: ubuntu-latest
    needs: [ akamai-upload ]
    steps:
      - name: Test Environment
        env:
          AWS_ACCESS_KEY_ID: ::add-mask::${{ needs.akamai-upload.outputs.key_id }}
          AWS_SECRET_ACCESS_KEY: ::add-mask::${{ needs.akamai-upload.outputs.key_secret }}
          AWS_SESSION_TOKEN: ::add-mask::${{ needs.akamai-upload.outputs.session_token }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          file="upload-test.txt"
          echo 'Upload test file' > $file
          cat $file
          aws s3 mv ./$file s3://tools-spring-io/test-akamai/$file
          aws s3 rm s3://tools-spring-io/test-akamai/$file



